function [wfn,coeff,SphHarmCol] = wfnGrid(P)  Ngrid = 20;         %number of grid points in any dimension  Lmax = 5;           %basis set cut-off (spherical harmonics L)  molName = 'H2';                     %molecule type: H2 or D2                                                                                   lambda = 1;                         %EQQ potential strength   da = pi/Ngrid;                      %spehrical grid density  phi = 0:2*da:(2*pi-2*da);  theta = 0:da:(pi-da);  [phi,theta] = meshgrid(phi,theta);  Nbasis = (Lmax+1)^2;  SphHarmCol = generateBasis(phi,theta,Lmax,Ngrid);  if (molName == 'H2'),    B = 1.0; %B=hbar^2/2I  else    if (molName == 'D2'),      B = 0.5;    else      error('atom name not found!')    end;  end;      disp('looping');  R0=(1./P).^(1.0./5.0);  disp(['Pressure: ',num2str(P)]);  fflush(stdout);      disp('still looping');  PotEngGridEQQ = generateEQQ(phi,theta,R0,Ngrid,lambda);  PotEngBasisEQQ = integrateEQQ(phi,theta,da,Ngrid,Nbasis,PotEngGridEQQ,SphHarmCol);  KinEngBasis = generateKinetic(B,Lmax);  Hamiltonian = KinEngBasis+PotEngBasisEQQ;  disp('still still looping');      [coeff,engLevels] = solveSchrodinger(Hamiltonian, Nbasis*Nbasis);  wfn = transpose(coeff)*SphHarmCol;    % Write this matrix to a file.  %fid = fopen('wfnGrid.txt','w');  %dlmwrite(fid,wfn);  %fclose(fid);  disp('looping completed');    % Write this coefBasis matrix to a file.  %fid = fopen('coeffBasis.txt','w');  %dlmwrite(fid,coeffBasis);  %fclose(fid);  disp('looping completed');  end;